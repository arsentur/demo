# coding: utf8
d = {}

d.clear() #Удаляет все элементы из словаря d
d.copy()  #Возвращает поверхностную копию словаря d
d.fromkeys(s, v) #Возвращает словарь типа dict, ключами которого являются
# элементы последовательности s, а значениями либо None, либо
#v, если аргумент v определен
d.get(k) #Возвращает значение ключа k или None, если ключ k отсутствует в словаре
d.get(k, v) #Возвращает значение ключа k или v, если ключ k отсутствует в словаре
d.items() #Возвращает представлениеa всех пар (ключ, значение) в словаре d a Представления словарей можно трактовать и
# использовать как итерируе мые объекты.
d.keys() #Возвращает представлениеа всех ключей словаря d
d.pop(k) #Возвращает значение ключа k и удаляет из словаря элемент с ключом k
# или возбуждает исключение KeyError, если ключ k отсутствует в словаре
d.pop(k, v) #Возвращает значение ключа k и удаляет из словаря элемент с ключом k
# или возвращает значение v, если ключ k отсутствует в словаре
d.popitem() #Возвращает и удаляет произвольную пару (ключ, значение) из словаря d
#  или возбуждает исключение KeyError, если словарь d пуст
d.setdefault(k, v) #То же, что и dict.get() за исключением того, что, если ключ k
#в словаре отсутствует, в словарь вставляется новый элемент с ключом k и со значением None или v, если аргумент v задан
d.update(a) #Добавляет в словарь d пары (ключ, значение) из a, которые от
#сутствуют в словаре d, а для каждого ключа, который уже при
#сутствует в словаре d, выполняется замена соответствующим
#значением из a; a может быть словарем, итерируемым объектом
#с парами (ключ, значение) или именованными аргументами
d.values() #Возвращает представлениеа всех значений в словаре d